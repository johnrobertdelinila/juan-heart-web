version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: juan_heart_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-juan_heart}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_USER: ${DB_USERNAME:-juan_heart}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/.docker/mysql:/docker-entrypoint-initdb.d
    networks:
      - juan_heart_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: juan_heart_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - juan_heart_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: juan_heart_backend
    restart: unless-stopped
    working_dir: /var/www/html
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    volumes:
      - ./backend:/var/www/html
      - ./docker/.docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - juan_heart_network
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-juan_heart}
      DB_USERNAME: ${DB_USERNAME:-juan_heart}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: php artisan serve --host=0.0.0.0 --port=8000

  # Laravel Queue Worker
  queue:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
    container_name: juan_heart_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mysql
      - redis
      - backend
    networks:
      - juan_heart_network
    environment:
      DB_CONNECTION: mysql
      DB_HOST: mysql
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-juan_heart}
      DB_USERNAME: ${DB_USERNAME:-juan_heart}
      DB_PASSWORD: ${DB_PASSWORD:-secret}
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: php artisan queue:work --tries=3

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/Dockerfile.frontend
      target: development
    container_name: juan_heart_frontend
    restart: unless-stopped
    working_dir: /app
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - juan_heart_network
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:${BACKEND_PORT:-8000}/api
      NEXT_PUBLIC_WS_URL: ws://localhost:6001
      NODE_ENV: development
    command: npm run dev

  # Nginx Web Server (Production-like setup)
  nginx:
    image: nginx:alpine
    container_name: juan_heart_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./backend/public:/var/www/html/public
      - ./docker/.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - juan_heart_network

  # Mailhog (Email testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: juan_heart_mailhog
    restart: unless-stopped
    ports:
      - "${MAILHOG_SMTP_PORT:-1025}:1025"
      - "${MAILHOG_HTTP_PORT:-8025}:8025"
    networks:
      - juan_heart_network

  # phpMyAdmin (Database management)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: juan_heart_phpmyadmin
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT:-8080}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME:-juan_heart}
      PMA_PASSWORD: ${DB_PASSWORD:-secret}
      UPLOAD_LIMIT: 100M
    depends_on:
      - mysql
    networks:
      - juan_heart_network

networks:
  juan_heart_network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
