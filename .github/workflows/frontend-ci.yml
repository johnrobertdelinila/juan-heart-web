name: Frontend CI

on:
  push:
    branches: [ main, staging, development ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ main, staging, development ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'

jobs:
  frontend-tests:
    name: Frontend Tests (Node ${{ matrix.node }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        node: [20, 21]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run unit tests
        run: npm run test -- --coverage --watchAll=false
        working-directory: ./frontend
        env:
          CI: true

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  frontend-lint:
    name: Frontend Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run ESLint
        run: npm run lint
        working-directory: ./frontend

      - name: Run Prettier check
        run: npx prettier --check "src/**/*.{js,jsx,ts,tsx,json,css,md}"
        working-directory: ./frontend

  typescript-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Run TypeScript compiler check
        run: npx tsc --noEmit
        working-directory: ./frontend

  build-frontend:
    name: Build Frontend Application
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Build Next.js application
        run: npm run build
        working-directory: ./frontend
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Verify build output
        run: |
          test -d .next
          test -f .next/BUILD_ID
        working-directory: ./frontend

      - name: Run Lighthouse CI (Performance)
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            http://localhost:3000
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true

  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: './frontend/package-lock.json'

      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
        working-directory: ./frontend

      - name: Build Next.js application
        run: npm run build
        working-directory: ./frontend
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Run Playwright tests
        run: npx playwright test
        working-directory: ./frontend
        env:
          CI: true

      - name: Upload Playwright report
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: playwright-report
          path: frontend/playwright-report/
          retention-days: 30
